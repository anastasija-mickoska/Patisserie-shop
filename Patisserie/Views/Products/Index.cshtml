@model Patisserie.ViewModels.ProductFilterViewModel

@{
    ViewData["Title"] = "Index";
}

<h1 id="product">PRODUCTS</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <button class="add" style="margin-left:5%">
        <a asp-action="Create">Create New</a>
    </button>
}
<form asp-controller="Products" asp-action="Index" method="get">
    <div class="form-group" style="margin-top:0; margin-left:2.5%; display: flex; align-items: center;">
        <input type="text" id="searchProduct" asp-for="searchString" placeholder="Search by name, category or flavours..."/>
        <input type="submit" value="Search" class="add submitBtn" />
    </div>
</form>
<section id="products">
    @foreach(var item in Model.Products)
    {
        <a asp-controller="Products" asp-action="Details" asp-route-id="@item.ProductId">
            <div class="card1">
                <img src=@Html.DisplayFor(modelItem => item.ImageUrl) class="card-img-top" alt="@Html.DisplayFor(modelItem => item.Name)">
                <div class="card-body">
                    <h5 class="title1">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <p class="title1">
                        @Html.DisplayFor(modelItem => item.Price)	&#8364;
                    </p>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                    {
                        <button class="add1"><a href="#">Order now</a></button>
                    }
                </div>
            </div>
        </a>
    }
</section>
