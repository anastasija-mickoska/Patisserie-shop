@using Microsoft.AspNetCore.Identity
@using Patisserie.Areas.Identity.Data
@inject UserManager<PatisserieUser> UserManager
@model Patisserie.ViewModels.CreateReviewViewModel

<h1 class="create">Create review</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateReview">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Product:</label>
                <input type="text" class="form-control" value="@Model.ProductName" readonly />
                <input asp-for="Review.ProductId" type="hidden" value="@Model.Review.ProductId" />
            </div>
            <div class="form-group">
                <label class="control-label">User:</label>
                <input type="text" class="form-control" value="@Model.User.UserName" readonly />
                <input type="hidden" asp-for="User.Id" />
            </div>
            <div class="form-group">
                <label asp-for="Review.Comment" class="control-label"></label>
                <input asp-for="Review.Comment" class="form-control" />
                <span asp-validation-for="Review.Comment" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Review.Rating" class="control-label"></label>
                <input asp-for="Review.Rating" class="form-control-range" type="range" min="1" max="10" step="1" oninput="updateSliderValue(this.value)" />
                <output style="font-size:1.5em" id="rating-value">5</output>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="add" />
                <button class="add"><a asp-action="Index">Back to List</a></button>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    <script>
        function updateSliderValue(value) {
            document.getElementById('rating-value').textContent = value;
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
